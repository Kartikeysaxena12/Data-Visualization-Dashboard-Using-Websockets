Data Visualization Dashboard Using Websockets

BACKEND
1. cors? why not same origins?
2. what is a middleware?
3. Dependancies that were installed based on modules imported
4. how can I emit specific data based on real life problems to the connected client for diff charts by calling various gendata func
5. how is it know that the client has disconnected?

FRONTEND
1.
2.
3.
4.
5.





kartikeyasaxena99
grF0goM79ADFLsGg

mongodb+srv://kartikeyasaxena99:grF0goM79ADFLsGg@cluster0.volfilf.mongodb.net/

mongodb+srv://kartikeyasaxena99:grF0goM79ADFLsGg
@cluster0.volfilf.mongodb.net/linkdatabase?retryWrites=true&w=majority&appName=Cluster0

import React, { useState, useEffect } from "react";
import "./Setting.css"; // Importing the CSS file

const Settings = () => {
  const [theme, setTheme] = useState("light");

  useEffect(() => {
    const settingsContainer = document.querySelector(".settings-container");
    settingsContainer.setAttribute("data-theme", theme);
  }, [theme]);

  const handleThemeChange = (e) => {
    setTheme(e.target.value);
  };

  return (
    <div className="settings-container p-6 mx-auto mt-24 my-8 w-full max-w-lg bg-zinc-100 shadow-lg rounded-lg">
      <h2 className="text-3xl font-bold mb-4">Settings</h2>
      <div className="space-y-4">
        <div className="flex flex-col">
          <label className="font-semibold text-gray-700">Profile</label>
          <input
            type="text"
            placeholder="Username"
            className="p-2 border border-gray-300 rounded mt-1"
          />
        </div>
        <div className="flex flex-col">
          <label className="font-semibold text-gray-700">Email</label>
          <input
            type="email"
            placeholder="Email"
            className="p-2 border border-gray-300 rounded mt-1"
          />
        </div>
        <div className="flex flex-col">
          <label className="font-semibold text-gray-700">Password</label>
          <input
            type="password"
            placeholder="Password"
            className="p-2 border border-gray-300 rounded mt-1"
          />
        </div>
        <div className="flex flex-col">
          <label className="font-semibold text-gray-700">Notifications</label>
          <select className="p-2 border border-gray-300 rounded mt-1">
            <option>Email</option>
            <option>SMS</option>
            <option>Push Notifications</option>
          </select>
        </div>
        <div className="flex flex-col">
          <label className="font-semibold text-gray-700">Theme</label>
          <select
            className="p-2 border border-gray-300 rounded mt-1"
            value={theme}
            onChange={handleThemeChange}
          >
            <option value="light">Light</option>
            <option value="dark">Dark</option>
            <option value="system">System Default</option>
          </select>
        </div>
        <button className="bg-blue-600 text-white p-2 rounded font-semibold mt-4 hover:bg-blue-700">
          Save Settings
        </button>
      </div>
    </div>
  );
};

export default Settings;


import React, { useState } from "react";
import { Canvas } from "@react-three/fiber";
import { OrbitControls } from "@react-three/drei";
import "./Setting.css";

const RotatingBox = ({ position, color }) => (
  <mesh position={position} rotation={[Math.PI / 4, Math.PI / 4, 0]}>
    <boxGeometry args={[1.5, 1.5, 1.5]} />
    <meshStandardMaterial color={color} />
  </mesh>
);

const Background3D = () => (
  <Canvas className="absolute inset-0 z-0">
    <ambientLight intensity={0.5} />
    <directionalLight position={[0, 10, 5]} />
    <RotatingBox position={[2, 1, -5]} color="rgba(173, 216, 230, 0.7)" />
    <RotatingBox position={[-2, -1, -5]} color="rgba(240, 248, 255, 0.5)" />
    <OrbitControls enableZoom={false} />
  </Canvas>
);

const Settings = () => {
  const [theme, setTheme] = useState("light");

  const handleThemeChange = (event) => {
    setTheme(event.target.value);
  };

  return (
    <div className="settings-page">
      <Background3D />
      <div
        className={`settings-container p-6 mx-auto my-8 w-full max-w-lg bg-zinc-100 shadow-lg rounded-lg relative z-10`}
        data-theme={theme}
      >
        <h2 className="text-3xl font-bold mb-4">Settings</h2>
        <div className="flex flex-col">
          <label className="font-semibold text-gray-700">Profile</label>
          <input
            type="text"
            placeholder="Username"
            className="p-2 border border-gray-300 rounded mt-1"
          />
        </div>
        <div className="flex flex-col">
          <label className="font-semibold text-gray-700">Email</label>
          <input
            type="email"
            placeholder="Email"
            className="p-2 border border-gray-300 rounded mt-1"
          />
        </div>
        <div className="flex flex-col">
          <label className="font-semibold text-gray-700">Password</label>
          <input
            type="password"
            placeholder="Password"
            className="p-2 border border-gray-300 rounded mt-1"
          />
        </div>
        <div className="flex flex-col">
          <label className="font-semibold text-gray-700">Notifications</label>
          <select className="p-2 border border-gray-300 rounded mt-1">
            <option>Email</option>
            <option>SMS</option>
            <option>Push Notifications</option>
          </select>
        </div>
        <div className="flex flex-col">
          <label className="font-semibold text-gray-700">Theme</label>
          <select
            className="p-2 border border-gray-300 rounded mt-1"
            value={theme}
            onChange={handleThemeChange}
          >
            <option value="light">Light</option>
            <option value="dark">Dark</option>
            <option value="system">System Default</option>
          </select>
        </div>
        <button className="bg-blue-600 text-white p-2 rounded font-semibold mt-4 hover:bg-blue-700">
          Save Settings
        </button>
      </div>
    </div>
  );
};

export default Settings;
